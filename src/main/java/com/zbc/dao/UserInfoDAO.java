package com.zbc.dao;

import com.zbc.pojo.PagingInfo;
import com.zbc.pojo.UserInfoPO;
import org.mybatis.spring.annotation.MapperScan;

import java.util.List;

@MapperScan
public interface UserInfoDAO {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbg.generated
     */
    int insertByRegister(UserInfoPO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbg.generated
     */
    int insertSelective(UserInfoPO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbg.generated
     */
    UserInfoPO selectByPrimaryKey(Long id);

    /**
     * 通过指定少量用户信息获取特定用户信息
     * @param record
     * @return
     */
    UserInfoPO selectByUserInfo(UserInfoPO record);

    /**
     * 通过邮箱查询用户信息
     * @param email
     * @return
     */
    UserInfoPO selectByEmail(String email);

    /**
     * 通过邮箱和注册代码查询用户
     * @param record
     * @return
     */
    UserInfoPO selectByCodeAndEmail(UserInfoPO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(UserInfoPO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(UserInfoPO record);

    /**
     * 返回所有用户信息，如果有 查询字符串，就执行模糊查询
     * @param pagingInfo
     * @return
     */
    List<UserInfoPO> listUserInfo(PagingInfo pagingInfo);

    /**
     * 返回所有用户个数
     * @return
     */
    int countAll();
}